name: Docker 镜像构建

on:
  push:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      # 默认使用仓库名作为镜像名称
      IMAGE_NAME: dddocr

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 登录阿里云容器镜像服务
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_REGISTRY_USER }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 缓存 Docker 层
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: 获取版本号
        id: version
        run: echo "VERSION=$(date +%Y%m%d)-${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

      - name: 设置镜像名称
        id: image
        run: |
          # 如果设置了自定义镜像名称则使用，否则使用默认值（仓库名）
          echo "NAME=${IMAGE_NAME_OVERRIDE:-$IMAGE_NAME}" >> $GITHUB_OUTPUT

      - name: 构建并推送镜像
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.ALIYUN_REGISTRY }}/${{ secrets.ALIYUN_NAME_SPACE }}/${{ steps.image.outputs.NAME }}:latest
            ${{ secrets.ALIYUN_REGISTRY }}/${{ secrets.ALIYUN_NAME_SPACE }}/${{ steps.image.outputs.NAME }}:${{ steps.version.outputs.VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: 更新缓存
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache